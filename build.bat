:: PowerScript Framework
:: Application builder
@echo off
setlocal ENABLEDELAYEDEXPANSION
chcp 65001 > nul

:: Mask for powershell files
set srcFrame=%cd%\src-frame
set srcScript=%cd%\src
set maskFrame=%srcFrame%\*.ps1
set maskSource=%srcScript%\*.ps1

:: Create build folder if not exists
set outputDir=%cd%\build
mkdir "%outputDir%" 2> nul

set resSrc=%cd%\res
set resDst=%outputDir%\res\

set outputFile=%outputDir%\app.tmp
set outputBasename=app.ps1
set launcherFile=%outputDir%\launcher.vbs

:: Remove temp and old-build files
rem del "%outputDir%\*.ps1" 2> nul
rem rd "%resDst%" /S /Q 2> nul
rd "%outputDir%" /S /Q 2> nul
md "%outputDir%"

echo [Builder] Current directory: %cd%
echo [Builder] Import PowerScript Framework from "/src-frame/"
echo ^<# [Builder] PowerScript Framework #^> > %outputFile%

for /f %%f in ('dir "%maskFrame%" /b/s') do (
	echo [Builder] File: %%f
	echo. >> %outputFile%
	echo ^<# [Builder] File: %%~nf #^> >> %outputFile%
	type %%f >> %outputFile%
	echo. >> %outputFile%
)

echo [Builder] Import Application from "/src/"
echo ^<# [Builder] PowerScript Application #^> >> %outputFile%
for /f %%f in ('dir "%maskSource%" /b/s') do (
	echo. >> %outputFile%
	echo [Builder] File: %%f
	echo ^<# [Builder] File: %%~nf #^> >> %outputFile%
	type %%f >> %outputFile%
	echo. >> %outputFile%
)

rem Modify source: adapting syntaxis, replace Class::Method to [Class]::Method
type "%outputFile%" | repl "([A-Za-z0-9_]+)::([A-Za-z0-9_]+)\(" "[$1]::$2(" > "%outputFile%.replaced"
del "%outputFile%"

rem Renaming output file to .ps1 
rename "%outputFile%.replaced" "%outputBasename%"

rem Generating launcher file
if not exist "%launcherFile%" (
	echo ' generated by PSFrame builder > "%launcherFile%"
	echo set Shell = CreateObject("WScript.Shell"^) >> "%launcherFile%"
	echo set FSO = CreateObject("Scripting.FileSystemObject"^) >> "%launcherFile%"
	echo Path = "powershell.exe -ExecutionPolicy UnRestricted -WindowStyle hidden -File " ^& FSO.GetParentFolderName(FSO.GetFile(WScript.ScriptFullName^)^) ^& "\\%outputBasename%" >> "%launcherFile%"
	echo Shell.Run Path, 0, true >> "%launcherFile%"
)

echo [Builder] Copying resources ...
xcopy "%resSrc%" "%resDst%" /E


if "%~1" == "-launch" (
	goto launch
)

set /p launch=Launch builded script [y/n]?: 

echo "%launch%"

if "%launch%"=="y" (
	:launch
	echo Execute from path "%outputDir%\%outputBasename%"
	powershell.exe -ExecutionPolicy UnRestricted -File "%outputDir%\%outputBasename%"
)